app.js
import React from 'react';
import { CartProvider } from './CartContext'; 
import CartPage from './CartPage'; 

const App = () => {
  return (
    <CartProvider>
      <CartPage />
    </CartProvider>
  );
};

export default App;





//cardContext.js

import React, { createContext, useContext, useState ,useEffect} from 'react';

const CartContext = createContext();

export const CartProvider = ({ children }) => {
  const [cartItems, setCartItems] = useState([]);
  const [fetchedItems, setFetchedItems] = useState([]); 
  
  useEffect(() => {
    
    fetch('https://64e825f899cf45b15fdf328c.mockapi.io/products')
      .then(response => response.json())
      .then(data => setFetchedItems(data))
      .catch(error => console.error('Error fetching data:', error));
  }, []);
  const addToCart = (item) => {
   
    setCartItems([...cartItems, item]);
  };

  const increaseQuantity = (itemId) => {
    
    const updatedCartItems = cartItems.map(item =>
      item.id === itemId ? { ...item, quantity: item.quantity + 1 } : item
    );
    setCartItems(updatedCartItems);
  };

  const decreaseQuantity = (itemId) => {
    
    const updatedCartItems = cartItems.map(item =>
      item.id === itemId ? { ...item, quantity: Math.max(item.quantity - 1, 0) } : item
    );
    setCartItems(updatedCartItems);
  };

  const getTotalQuantity = () => {
    return cartItems.reduce((total, item) => total + item.quantity, 0);
  };

  const getTotalAmount = () => {
    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);
  };

  const contextValue = {
    cartItems,
    addToCart,
    increaseQuantity,
    decreaseQuantity,
    getTotalQuantity,
    getTotalAmount,
  };

  return <CartContext.Provider value={contextValue}>{children}</CartContext.Provider>;
};

export const useCart = () => {
  return useContext(CartContext);
};




//cartpage.js

import React from 'react';
import { useCart } from './CartContext';

const CartPage = () => {
  const {
    cartItems,
    addToCart,
    increaseQuantity,
    decreaseQuantity,
    getTotalQuantity,
    getTotalAmount,
    fetchedItems, // Add this line
  } = useCart();

  console.log('Fetched items:', fetchedItems); // This line should be inside the component body

  return (
    <div>
      <h2>Cart Page</h2>
      <ul>
        {cartItems.map(item => (
          <li key={item.id}>
            <span>{item.name}</span>
            <span>Price: {item.price}</span>
            <span>Quantity: {item.quantity}</span>
            <button onClick={() => increaseQuantity(item.id)}>+</button>
            <button onClick={() => decreaseQuantity(item.id)}>-</button>
          </li>
        ))}
      </ul>
      <div>
        <p>Total Quantity: {getTotalQuantity()}</p>
        <p>Total Amount: {getTotalAmount()}</p>
      </div>
    </div>
  );
};

export default CartPage;
